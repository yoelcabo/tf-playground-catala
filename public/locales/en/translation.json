{
  "title": "A Neural Network Playground",
  "header": {
    "title": "Tinker With a <b>Neural Network</b> <span class='optional'>Right Here </span>in Your Browser.<br>Don't Worry, You Can't Break It. We Promise."
  },
  "controls": {
    "epoch": "Epoch",
    "learningRate": "Learning rate",
    "activation": "Activation",
    "relu": "ReLU",
    "tanh": "Tanh",
    "sigmoid": "Sigmoid",
    "linear": "Linear",
    "regularization": "Regularization",
    "none": "None",
    "L1": "L1",
    "L2": "L2",
    "regularizationRate": "Regularization rate",
    "problemType": "Problem type",
    "classification": "Classification",
    "regression": "Regression",
    "playButton": "Play button",
    "stepButton": "Step button",
    "resetButton": "Reset button"
  },
  "data": {
    "title": "Data",
    "whichDataset": "Which dataset do you want to use?",
    "whichDatasetShort": "Which dataset",
    "circle": "Circle",
    "exclusiveOr": "Exclusive or",
    "gaussian": "Gaussian",
    "spiral": "Spiral",
    "plane": "Plane",
    "multiGaussian": "Multi gaussian",
    "percTrainData": "Ratio of training to test data:",
    "percTrainDataShort": "Ratio train data",
    "noise": "Noise",
    "batchSize": "Batch size",
    "regenerate": "Regenerate"
  },
  "features": {
    "title": "Features",
    "description": "Which properties do you want to feed in?",
    "neuronOutput": "This is the output from one <b>neuron</b>. Hover to see it larger.",
    "weightMixing": "The outputs are mixed with varying <b>weights</b>, shown by the thickness of the lines."
  },
  "hiddenLayers": {
    "label": "Hidden layers"
  },
  "output": {
    "title": "Output",
    "testLoss": "Test loss",
    "trainingLoss": "Training loss",
    "colorExplanation": "Colors show data, neuron and weight values.",
    "showTestData": "Show test data",
    "discretize": "Discretize output"
  },
  "article": {
    "whatIsNeuralNetwork": {
      "title": "Um, What Is a Neural Network?",
      "content": "It's a technique for building a computer program that learns from data. It is based very loosely on how we think the human brain works. First, a collection of software \"neurons\" are created and connected together, allowing them to send messages to each other. Next, the network is asked to solve a problem, which it attempts to do over and over, each time strengthening the connections that lead to success and diminishing those that lead to failure. For a more detailed introduction to neural networks, Michael Nielsen's <a href=\"http://neuralnetworksanddeeplearning.com/index.html\">Neural Networks and Deep Learning</a> is a good place to start. For a more technical overview, try <a href=\"http://www.deeplearningbook.org/\">Deep Learning</a> by Ian Goodfellow, Yoshua Bengio, and Aaron Courville."
    },
    "canIReuse": {
      "title": "This Is Cool, Can I Repurpose It?",
      "content1": "Please do! We've open sourced it on <a href=\"https://github.com/tensorflow/playground\">GitHub</a> with the hope that it can make neural networks a little more accessible and easier to learn. You're free to use it in any way that follows our <a href=\"https://github.com/tensorflow/playground/blob/master/LICENSE\">Apache License</a>. And if you have any suggestions for additions or changes, please <a href=\"https://github.com/tensorflow/playground/issues\">let us know</a>.",
      "content2": "We've also provided some controls below to enable you tailor the playground to a specific topic or lesson. Just choose which features you'd like to be visible below then save <a class=\"hide-controls-link\" href=\"#\">this link</a>, or <a href=\"javascript:location.reload();\">refresh</a> the page."
    },
    "colorMeaning": {
      "title": "What Do All the Colors Mean?",
      "content1": "Orange and blue are used throughout the visualization in slightly different ways, but in general orange shows negative values while blue shows positive values.",
      "content2": "The data points (represented by small circles) are initially colored orange or blue, which correspond to positive one and negative one.",
      "content3": "In the hidden layers, the lines are colored by the weights of the connections between neurons. Blue shows a positive weight, which means the network is using that output of the neuron as given. An orange line shows that the network is assigning a negative weight.",
      "content4": "In the output layer, the dots are colored orange or blue depending on their original values. The background color shows what the network is predicting for a particular area. The intensity of the color shows how confident that prediction is."
    },
    "whatLibrary": {
      "title": "What Library Are You Using?",
      "content": "We wrote a tiny neural network <a href=\"https://github.com/tensorflow/playground/blob/master/src/nn.ts\">library</a> that meets the demands of this educational visualization. For real-world applications, consider the <a href=\"https://www.tensorflow.org/\">TensorFlow</a> library."
    },
    "credits": {
      "title": "Credits",
      "content": "This was created by Daniel Smilkov and Shan Carter. This is a continuation of many people's previous work — most notably Andrej Karpathy's <a href=\"http://cs.stanford.edu/people/karpathy/convnetjs/demo/classify2d.html\">convnet.js demo</a> and Chris Olah's <a href=\"http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/\">articles</a> about neural networks. Many thanks also to D. Sculley for help with the original idea and to Fernanda Viégas and Martin Wattenberg and the rest of the <a href=\"https://research.google.com/bigpicture/\">Big Picture</a> and <a href=\"https://research.google.com/teams/brain/\">Google Brain</a> teams for feedback and guidance.",
      "translation": ""
    }
  },
  "hovercard": {
    "clickToEdit": "Click anywhere to edit.",
    "weightBias": "Weight/Bias"
  }
}